#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–µ–ª–∏–∑–∞ –Ω–∞ GitHub
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/build-and-release.sh [–≤–µ—Ä—Å–∏—è] [–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞]
# –ü—Ä–∏–º–µ—Ä: ./scripts/build-and-release.sh 1.0.0 mac
# –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã: mac, win, linux, all

set -e

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ (–µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –≤ –±—É–¥—É—â–µ–º)
cleanup() {
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
if [ -f ".env" ]; then
    echo "üìã –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞..."
    export $(grep -v '^#' .env | xargs)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω
    if [ -z "$GH_TOKEN" ]; then
        echo "‚ö†Ô∏è  GH_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"
    else
        echo "‚úÖ GitHub —Ç–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Ä—Å–∏—è –ø–µ—Ä–µ–¥–∞–Ω–∞
if [ -z "$1" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–≤–µ—Ä—Å–∏—è] [–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞]"
    echo "–ü—Ä–∏–º–µ—Ä: $0 1.0.0 mac"
    echo "–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã: mac, win, linux, all"
    exit 1
fi

VERSION=$1
PLATFORM=${2:-all}

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—é —Ä–µ–ª–∏–∑–∞ –≤–µ—Ä—Å–∏–∏ $VERSION –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã $PLATFORM"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ git –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º
if [ -n "$(git status --porcelain)" ]; then
    echo "‚ö†Ô∏è  –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —á–∏—Å—Ç–∞—è. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º..."
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∏—Å–∫–ª—é—á–∞—è .env —Ñ–∞–π–ª
    echo "üìù –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git (–∏—Å–∫–ª—é—á–∞—è .env)..."
    git add .
    git reset .env
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞
    if [ -n "$(git diff --cached --name-only)" ]; then
        echo "üíæ –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏..."
        git commit -m "chore: prepare for release $VERSION"
        echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    else
        echo "‚ÑπÔ∏è  –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
    fi
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    if [ -n "$(git status --porcelain)" ]; then
        echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ git –≤—Ä—É—á–Ω—É—é."
        git status
        exit 1
    fi
else
    echo "‚úÖ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —á–∏—Å—Ç–∞—è"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ –≤–µ—Ç–∫–µ main –∏–ª–∏ master
CURRENT_BRANCH=$(git branch --show-current)
if [ "$CURRENT_BRANCH" != "main" ] && [ "$CURRENT_BRANCH" != "master" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–∞ —Ç–æ–ª—å–∫–æ —Å –≤–µ—Ç–∫–∏ main –∏–ª–∏ master"
    echo "–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $CURRENT_BRANCH"
    exit 1
fi

# –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é –≤ package.json
echo "üìù –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é –≤ package.json..."
npm version $VERSION --no-git-tag-version

# –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π
echo "üíæ –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π..."
git add package.json
git commit -m "chore: bump version to $VERSION"

# –°–æ–∑–¥–∞–µ–º —Ç–µ–≥
echo "üè∑Ô∏è  –°–æ–∑–¥–∞–µ–º —Ç–µ–≥ v$VERSION..."
git tag "v$VERSION"

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ —Ç–µ–≥
echo "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ —Ç–µ–≥ –Ω–∞ GitHub..."
git push origin $CURRENT_BRANCH
git push origin "v$VERSION"

# –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π
if [ -f ".env" ]; then
    export $(grep -v '^#' .env | xargs)
fi

# –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ –∏ –ø—É–±–ª–∏–∫—É–µ–º
echo "üî® –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ –∏ –ø—É–±–ª–∏–∫—É–µ–º..."

if [ "$PLATFORM" = "all" ]; then
    echo "üì¶ –°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º..."
    npm run release
elif [ "$PLATFORM" = "mac" ]; then
    echo "üçé –°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –¥–ª—è macOS..."
    npm run release:mac
elif [ "$PLATFORM" = "win" ]; then
    echo "ü™ü –°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –¥–ª—è Windows..."
    npm run release:win
elif [ "$PLATFORM" = "linux" ]; then
    echo "üêß –°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –¥–ª—è Linux..."
    npm run release:linux
else
    echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: $PLATFORM"
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: mac, win, linux, all"
    exit 1
fi

echo "‚úÖ –°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"
echo "üìÅ –§–∞–π–ª—ã —Å–±–æ—Ä–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ dist/"

echo "üéâ –†–µ–ª–∏–∑ v$VERSION —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!"
echo "üîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–ª–∏–∑: https://github.com/KhomenkoRoman/ElectronPosApp/releases"
echo "üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: https://github.com/KhomenkoRoman/ElectronPosApp/actions"
